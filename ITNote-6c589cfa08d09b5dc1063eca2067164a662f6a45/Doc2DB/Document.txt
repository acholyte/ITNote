1.	리버스 엔지니어링(Reverse Engineering, 리버싱: Reversing)
	장치 또는 시스템의 구조 분석을 통해 기술적인 원리 파악
2.	빅 데이터
	기존 데이터베이스 관리 도구로 관리할 수 있는 크기를 넘어선 대량의 정형 또는 비정형 데이터 집합 및 이런 데이터로부터 가치를 추출하고 결과를 분석하는 기술
3.	사물인터넷(IoT: Internet of Things)
	인터넷을 기반으로 모든 사물을 연결하여 사람과 사물, 사물과 사물 간의 정보를 상호 소통하는 기술 및 서비스
4.	클라우드
	인터넷 상의 유틸리티 데이터 서버에 프로그램을 두고 실시간으로 컴퓨터나 휴대폰 등에 불러와서 사용하는 웹에 기반한 소프트웨어 서비스
	기저부하시 비용이 큼
5.	임베디드 시스템
	특정 제품이나 솔루션에서 주어진 작업을 수행할 수 있도록 추가로 탑재되는 솔루션이나 시스템
6.	Qt
	C++ 기반 GUI 프로그램 개발에 쓰이는 크로스 플랫폼 프레임워크
	비GUI 프로그램 개발에도 사용
7.	닷넷
	마이크로소프트가 제시한 차세대 시스템, 소프트웨어, 개발, 서비스, 분산환경, 표준 등의 새로운 패러다임을 담은 통합되고 일관된 솔루션 체계
8.	유니티
	3D 게임 엔진으로 3D 게임이나 애니메이션 등을 만들 때 쓰는 에디터 툴
	자바, C# 사용
9.	디자인 패턴
	객체지향 언어에서 유지보수가 쉽고, 효율적인 설계를 하기 위해 제안된 것
10.	NoSQL
	조인 연산 불가능
	각 데이터가 독립적으로 설계되어 여러 서버에 분산하여 작업하는 방식
	각 서버에서 처리하는 양이 줄고 대용량의 데이터 입출력이 있어도 처리 쉬움
11.	인포그래픽
	데이터 시각화
	복잡한 정보를 빠르고 명확하게 설명
	차트, 지도, 다이어그램, 흐름도, 로고, 일러스트레이션 등
12.	OpenCL
	개방형 컴퓨팅 언어
	서로 다른 종류의 플랫폼에서 작업을 실행하는 병렬 컴퓨팅 언어체계
	3차원 컴퓨터 그래픽 및 컴퓨터 오디오에 대한 산업계의 개방형 표준
	작업 및 데이터 기반 병렬화를 통한 병렬 컴퓨팅 제공
	C 언어에 기반
13.	OpenCV
	오픈 소스 컴퓨터 비전 C 라이브러리
	실시간 컴퓨터 영상 프로그램 라이브러리
14.	OpenGL
	2D/3D를 정의한 컴퓨터 산업 표준 API
	여러 그래픽 작업에 사용
	크로스 플랫폼
	C 언어에 기반
15.	WebGL
	웹 기반 그래픽 라이브러리
	자바스크립트를 통해 사용
	호환성 있는 웹 브라우저에게 3D 그래픽을 사용할 수 있도록 제공
16.	ARM
	임베디드 기기에 사용되는 32bit RISC 프로세서
	AVR보다  좀 더 기능이 많은 MCU(MCU: Micro Controller Unit)
17.	RISC
	CPU 명령어의 개수를 줄여 하드웨어의 구조를 좀 더 간단하게 만드는 방식
	마이크로프로세서를 설계하는 방법 중 하나
18.	통합 모델링 언어(UML: Unified Modeling Language)
	소프트웨어 공학에서 사용되는 표준화된 범용 모델링 언어
	객체 지향 소프트웨어 집약 시스템을 개발할 때 산출물을 명세화, 시각화, 문서화할 때 사용
19.	서비스 지향 아키텍처(SOA: Service Oriented Architecture)
	대규모 컴퓨터 시스템을 구축할 때의 개념
	업무상에 일 처리에 해당하는 소프트웨어 기능을 서비스로 판단하여 그 서비스를 네트워크상에 연동하여 시스템 전체를 구축해 나가는 방법론
	필요한 애플리케이션 서비스를 분리하여 조합함으로써 새로운 애플리케이션 서비스 제공
	기능별로 소프트웨어와 서버를 독립적으로 구현
	최초 구현 비용이 많이 듦
	코드 재사용성/연동성/확장성 높음
20.	윈도우 프레젠테이션 파운데이션(WPF:
	XML을 이용하여 프로그래밍
	응용 프로그램을 만들기 위한 일정한 프로그래밍 모델 제공
	WPF 응용 프로그램은 바탕화면에 배치하거나 웹 브라우저에 호스팅 가능
	닷넷 프레임워크 중 일부
21.	윈도우 커뮤니케이션 파운데이션(WCF)
	응용 프로그램을 한 대의 컴퓨터나 네트워크에 연결된 여러 컴퓨터를 걸쳐 통신할 수 있게 만들어주는 통신 하부 시스템
	닷넷 프레임워크 중 일부
22.	엔터프라이즈 자바빈즈(EJB: Enterprise JavaBeans)
	자바 플랫폼 엔터프라이즈 에디션(자바를 이용한 서버측 개발용 플랫폼) API 중 하나
	기업 환경 시스템을 구현하기 위한 서버측 컴포넌트 모델
	업무 로직을 처리(JSP는 화면 로직 처리)
23.	RFID
	전파를 이용해 먼 거리에서 정보를 인식하는 기술
	IC칩과 무선을 통해 다양한 개체의 정보를 관리할 수 있는 인식 기술
	기업의 제품에 활용할 경우 생산에서 판매에 이르는 전 과정의 정보를 초소형 칩에 내장시켜 이를 무선 주파수로 추적 가능
24.	스위프트
	애플의 iOS와 OS X를 위한 프로그래밍 언어
	오브젝티브-C와 공존
	오브젝티브-C에 없는 클로저, 다룽 리턴 타입, 네임스페이스, 제네릭스, 타입 유추 등 추가
25.	컴포넌트 기반 개발(CBD: Component Based Development)
	시스템을 하나의 일체형으로 구축하지 않고 하나씩 요소별로 부품화하여 구축하는 방법
	소프트웨어 재사용으로 개발 비용과 시간 절감
	설계 개념을 중시해 소프트웨어 산업의 질적 향상을 가져옴
26.	패턴 인식
	문자, 음성, 물체 형상 등을 판별 , 인지하는 것
	계산이 가능한 기계 장치(컴퓨터)과 어떤 대상을 인식하는 문제를 다루는 인공지능 분야
27.	DSL
	Domain-Specific Language
	특정 어플리케이션 도메인에 특화된 프로그래밍 언어
28.	리스프(Lisp)
	고급 프로그래밍 언어
	다중 패러다임/함수형/절차형 프로그래밍 언어
	데이터 요소의 순서적 집합 목록을 함수로 처리
	여러 변종 있음
29.	데이터 마이닝
	대규모로 저장된 데이터 안에서 체계적이고 자동적으로 통계적 규칙이나 패턴을 찾는 것
	찾아낸 정보로 미래에 실행 가능하고 의사 결정에 이용
	자료에 의존하여 현상을 해석하고 개선하려고 하기 때문에 자료가 현실을 충분히 반영하지 못한 상태에서 정보를 추출한 모형을 개발하면 잘못된 모형을 구축하는 오류를 범할 수 있음
30.	ADO.NET
	프로그래머들이 데이터와 데이터 서비스에 접근할 수 있는 컴퓨터 소프트웨어 구성 요소 집합
	닷넷 프레임워크의 일부
	관계형 데이터베이스 시스템에 저장된 데이터에 접근하거나 수정할 때 사용
31.	Node.js
	확장성 있는 네트워크 어플리케이션(특히 서버 쪽) 개발에 사용되는 소프트웨어 플랫폼
	자바스크립트로 작성되어 Non-Blocking I/O와 단일 스레드 이벤트 루프를 통한 높은 처리 성능 가짐
	내장 HTTP 서버 라이브러리를 가져 별도 소프트웨어 없이 웹 서버에서 동작 가능
	웹 서버에서 더 많은 통제 가능
32.	R
	통계 계산 및 그래픽을 위한 프로그래밍 언어이자 소프트웨어 환경
	통계 소프트웨어 개발과 자료 분석에 널리 사용
33.	웹 2.0
	데이터의 소유자나 독점자 없이 누구나 손쉽게 데이터를 생산하고 인터넷에서 공유할 수 있도록 한 사용자 참여 중심의 인터넷 환경. 사용자가 직접 데이터를 다룰 수 있도록 데이터를 제공하는 플랫폼이 정보를 더 쉽게 공유하고 서비스 받을 수 있음(블로그, 위키피디아)
34.	트래픽
	통신 장치나 시스템에 걸리는 부하 또는 네트워크를 통해 움직이는 데이터의 량이나 어떤 종류의 트랜잭션 및 메시지 등의 량을 나타날 때에도 사용.
35.	브로드밴드
	초고속 인터넷
	주파수 분할 다중화 기법을 이용해 하나의 전송매체에 여러 개의 데이터 채널을 제공
36.	기저부하
	주어진 기간 동안의 최저 부하
37.	온프레이즈(On-Premise)
	사람이 소프트웨어 컴퓨터에 직접 설치하고 실행하는 것
38.	모놀로식(monolithic)
	단일
39.	RPC(Remote Procedure Call)
	원격 절차 호출
40.	스토리지
	컴퓨터 프로세서가 접근할 수 있도록 데이터를 전자기 형태로 저장하는 장소를 말함
	인터넷 산업이 발전하면서 대용량의 저장소를 뜻함
41.	웹 호환성
	브라우저와 운영체제에 상관없이 웹 사이트를 이용할 수 있는 것
42.	MDM(Mobile Device Management)
	모바일 단말 관리
	개인이 소유한 스마트 기기를 기업이 중앙에서 제어
	단말기 차원에서 일어나는 일 추적 가능
	애플리케이션 차원에서 할 수 있는 일은 없음
43.	MAM(Mobile Application Management)
	모바일 기기에 설치된 앱과 데이터를 선택적으로 관리하는 솔루션
	개인과 기업의 영역을 나눠 관리 가능
44.	MIM(Mobile Information Management)
	보안에 민감한 업무 데이터를 암호화 상태로 유지
	승인된 어플리케이션만이 이 데이터에 접근이나 통신 가능
45.	EMM(Enterprise Mobility Management)
	스마트폰과 태블릿 PC를 업무용으로 안전하게 사용할 수 있게 하는 모든 접근
46.	데이터 사일로
	디바이스, 센서로부터 얻은 정보를 특정 목적에만 쓰고 다른 곳에서 활용 불가
47.	분산 병렬 처리
	데이터를 여러 대의 컴퓨터로 나눠 처리
48.	웨어러블(wearable)
	옷 입듯이 몸에 착용할 수 있는 특수 컴퓨터
49.	IC(Integrated Circuit, 집적 회로)
	많은 전자회로 소자가 하나의 기판 또는 기판 자체에 분리가 불가능한 상퇴로 결합된 초소형 구조의 기능성 복합적 전자소자 또는 시스템
50.	아두이노(Arduino)
	오픈 소스를 지향하는 마이크로 컨트롤러를 내장한 기기 제어용 기판
	컴퓨터 메인보드의 단순 버전으로 다양한 센서나 부품 등의 장치 연결 가능
	오픈 소스를 하드웨어 개념으로까지 확장시킨 오픈 소스 하드웨어
	종류
	아두이노 uno – 아두아노 표준 모델
	아두이노 due - 32비트 ARM 코어텍스를 장착하여 성능 개선
	아두이노 tre – 아두아노와 비글 본 블랙을 합쳐 고성능임(운영체제 사용 가능)
	아두이노 yun – 리눅스 구동이 가능하며 웹서비스에 특화
	아두이노 zero – 펌웨어 기반 모델의 개발 편의성 집중
	펌웨어 기반으로 운영체제를 돌리기에 성능이 부족
51.	린 스타트업(Lean Startup)
	아이디어를 빠르게 시제품으로 제조한 뒤 시장의 반응을 통해 다음 제품 개선에 반영하는 전략
	“만들기 –> 측정 –> 학습”의 과정 반복
52.	함수형 언어
	데이터에 대한 함수의 적용을 바탕으로 처리를 기술하는 프로그램 언어
	함수에 입력이 되는 데이터와 출력이 되는 데이터는 서로 다른 데이터
	절차형 언어 같은 데이터의 예기치 못한 변경을 고려할 필요 없음
	리스프(LISP), 스키마(Schema), F#, 스칼라(Scala)
53.	데이터 딕셔너리
	시스템 전체에서 나타낸 데이터 항목에 대한 정보를 지정한 중앙 저장소
54.	유니버셜 앱
	여러가지 플랫폼을 하나의 언어로 통합 개발할 수 있는 앱
55.	응용 프로그램 가상화
	실행되는 기반 운영체제로부터 응용 소프트웨어를 캡슐화하는 소프트웨어 기술
56.	다트(Dart)
	구글에서 개발한 웹 프로그래밍 언어
	자바스크립트를 대체할 오픈 웹 플랫폼으로서 웹 개발언어를 목표로 개발
57.	고(Go)
	구글이 개발한 가비지 컬렉션 기능이 있는 컴파일, 병행성 프로그래밍 언어
58.	핵(Hack)
	페이스북에서 개발한 프로그래밍 언어
	C와 PHP의 장점을 가짐
59.	DDoS(Distributed Denial of Service: 분산 서비스 거부)
	여러 대의 공격자를 분산 배치하여 동시에 서비스 거부 공격을 하여 시스템이 더 이상 정상적 서비스를 제공할 수 없도록 만드는 것
	공격 목표의 컴퓨터 시스템이 처리할 수 없을 정도로 많은 패킷을 동시에 범람시켜 네트워크의 성능을 저하시키거나 시스템을 마비시킴
60.	CDN(Contents Delivery Network)
	콘텐츠 전송 네트워크
	콘텐츠를 효율적으로 전달하기 위해 여러 노드를 가진 네트워크에 데이터를 저장하여 제공하는 시스템
61.	장고(Django)
	파이썬으로 작성된 오픈 소스 웹 애플리케이션 프레임워크
	대형 프레임워크
	모델-뷰-컨트롤러 패턴을 느슨하게 적용
62.	Flask
	파이썬으로 작성된 프레임워크
	소형 프레임워크
63.	VBA(Visual Basic for Application)
	마이크로소프트의 윈도우 오피스 응용 프로그램용 매크로 언어
	Visual Basic 기반으로 매크로 언어를 범용화, 공통화
64.	XNA
	마이크로소프트에서 개발한 멀티플랫폼용 게임 개발 도구
	닷넷 환경에서 C#언어 사용
65.	Cocos2D
	무료 2D 게임 엔진
	OpenGL 기반
66.	Cocos2D-X
	Cocos2D의 멀티 플랫폼 용
	C++ 사용
67.	Apportable
	오브젝티브-C로 짠 소스코드를 안드로이드에서 설치할 수 있는 apk로 자동 패키징하는 SDK
	무료이나 모든 기능을 사용하려면 유료 멤버쉽 가입 필요
68.	캐시
	메모리 접근 시간을 줄여 프로그램 실행 속도 향상
	시공간적 지역성 이용
	시간적 지역성
	한번 사용된 데이터가 나중에 또 사용될 확률이 높을 때
	공간적 지역성
	특정 데이터가 사용되면 이와 인접한 데이터도 사용될 확률이 높을 때
	자료구조, 알고리즘은 이를 따름
	프로세서에서 데이터 요청
	해당 데이터 크기가 아닌 캐시 라인 단위로 읽음
	연산 과정에서 관련성이 낮은 데이터 분리 필요
69.	UUID(Universally Unique Identifier, 범용 고유 식별자)
	네트워크 상에서 서로 모르는 개체들을 식별하고 구분하기 위해 개발주체가 스스로 구분하기 위한 식별자를 지정하는 방법
	16옥텟(128비트)으로, 32개의 16진수로 표현
70.	비콘 프로그래밍
	비콘에서 송신하는 정보를 이용하여 비콘과 스마트폰과의 거리 측정
	비콘은 주기적으로 스마트폰으로 정보 전달
	스마트폰은 비콘으로부터 받은 위치정보를 산출한 뒤 표시
71.	라즈베리 파이
	라즈베리 파이 재단에서 만든 싱글 보드 컴퓨터
	그래픽 성능이 뛰어남
	저비용
72.	AVR
	ATMEGA 시리즈 총칭
73.	ABAP(Advanced Business Application Programming)
	고급 비즈니스 응용 프로그램을 만드는 언어
	4세대 언어로 3세대 언어(C, C++, 자바)보다 자연어에 가까움
	GUI 계층과 응용 프로그램 계층 사이에서 비즈니스 프로세스에 따라 사용자가 원하는 기능을 가진 프로그램을 제공하도록 개발하는 것이 목적인 언어
74.	애자일(Agile)
	“계획-개발-출시”의 개발 주기를 여러 번 반복하여 소프트웨어 개발 환경 등에 따라 유연하게 대처하는 방식
75.	미들웨어
	분산 컴퓨팅 환경에서 서로 다른 기종의 하드웨어나 프로토콜, 통신환경 등을 연결하여 응용 프로그램과 환경 간에 원만한 통신이 이뤄지게 하는 소프트웨어
76.	REST(Representational State Transfer)
	월드 와이드 웹(WWW)과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 아키턱처 형식
77.	CoAP(Constrained EnVironments Application Protocol)
	제한적 네트워크 상황에서의 프로토콜
	UDP 프로토콜 기반
	HTTP가 아니지만 대부분을 할 수 있음
	사물인터넷 프로토콜이나 M2M(Machine to Machine) 중심
78.	옵티아미저(Optimizer)
	보조기억장치의 압축 및 최적화를 위해 사용되는 프로그램
	단편화를 감소하여 파일 처리를 고속화
79.	샌드박스
	보호된 영역 내에서 프로그램을 동작시키는 것
	외부 요인으로 인한 악영향을 방지
80.	JSON
	인터넷에서 자료를 주고 받을 때 자료를 표현하는 방법
	자료 종류에 제한이 없으며 특히 컴퓨터 프로그램의 변수값을 표현하는데 적합
	자바스크립트의 구문 형식을 따르나 프로그래밍 언어나 플랫폼에 독립적
	C, C++, C#, 자바, 자바스크립트, 펄, 파이썬 등 많은 언어에서 이용 가능
81.	로드 밸런서(Load Balancer)
	트랜스포트 층에서 동작
	 네트워크 트래픽 패킷으로부터 어플리케이션 포트 번호 해석
	어플리케이션 트래픽 부하 분산과 우선 순위 결정 및 제어하도록 관리자에게 도움을 주는 네트워크 장비
82.	그루비
	공개 소스 소프트웨어로 개발되는 최근의 객체 지향 언어
	변수 타입이 동적이고 유연
	소스 파일을 컴파일하지 않고 바로 실행시키는 스크립팅 언어
83.	ICE(interactive Connectivity Establishment)
	상호 연결 설정
84.	STUN(Session Traversal Utilities for NAT)
	NAT를 위한 세션 유틸리티
85.	TURN(Traversal Using Relays around NAT)
	중계기를 활용한 NAT 주위 횡단
86.	UPnP(Universal Plug and Play)
	네트워크를 통해 장비가 서로를 자동으로 인식
87.	아토믹 오퍼레이션
	기능적으로 분할할 수 없거나 분할되지 않도록 보증된 조작
	인터럽트 불가능
	중지되면 동작 개시 전의 상태로 시스템 복귀를 보장하는 기능 제공(백업과 복원)
88.	인터럽트
	프로그램 실행 중 중앙 제어 장치가 강제적으로 제어를 특정 주소로 옮기는 것
	발생 시 프로그램은 중지되고 그 시점의 Center Control Unit의 중요 데이터가 주기억 장치로 되돌린 뒤 특정 주소로부터 시작되는 프로그램에 제어를 옮김
	원인이 되는 것
	장치나 프로그램의 고장 등의 비상 상황
	주기적으로 하는 것
	입출력 장치 완료 보고
89.	프론트엔드/백엔드
	프론트엔드(front-end)
	사용자와 직접 상호작용을 하는 프로그램
	사용자로부터 다양한 입력을 받음
	클라이언트/서버 모델의 클라이언트
	백엔드(back-end)
	요구되는 자원과 가깝거나, 교신할 수 있는 능력을 가짐
	프론트엔드로부터 받은 입력을 받아 자신이 사용할 수 있는 규격에 따라 처리
	클라이언트/서버 모델의 서버
	일종의 인터페이스
90.	IDC(Internet Data Center)
	기업 전산 시설 위탁 관리
91.	증강 현실
	실제 환경에 가상 사물이나 정보를 합성하여 원래 환경에 존재하는 사물처럼 보이게 하는 컴퓨터 그래픽 기법
92.	레디스
	오픈 소스 고급 키 값 저장소
	키로 문자열, 해쉬, 리스트, 세트, 정렬 세트 포함 가능
	데이터베이스 구조 서버로 사용 가능
93.	맴캐시드
	범용 분산 메모리 캐시 시스템
	오픈 소스
	외부 데이터를 읽는 횟수를 줄이기 위해 동적 데이터베이스 웹사이트에서 램에 데이터 및 객체를 저장
94.	NFC
	무선태그(RFID) 기술 중 하나
	10츠 이내의 가까운 거리에서 무선 데이터를 주고 받는 통신 기술
	블루투스와 달리 기기 간 설정을 하지 않아도 됨
	데이터 읽기와 쓰기 기능을 모두 사용 가능
95.	비콘
	저전력 블루투스(BLE)를 통한 차세대 스마트폰 근거리 통신 기술
	반경 50츠 범위 안에 있는 사용자의 위치를 찾아 데이터 전송 등을 가능하게 함
	배터리 사용량이 적으며, GPS보다 정교한 위치 파악 가능
96.	데이터 시각화
	데이터 분석 결과를 이해하기 쉽게 도표를 통해 정보를 효과적으로 전달
	인포그래픽으로 데이터를 한 장의 그림으로 요약
	단어 구름으로 문서에 사용된 단어의 빈도와 중요도를 시각적으로 표현
97.	컴퓨터 포렌싱(컴퓨터 법의학, 디지털 포렌식)
	전자적 증거물 등을 사법 기관에 제출하기 위해 데이터를 수집, 분석, 보고서를 작성하는 직업
	해킹이나 사이버 상의 범죄 조사 및 추적에 핵심적인 요소가 됨
98.	오픈스택
	퍼블릭 및 프라이빗 클라우드 시스템을 만들고 운영하도록 지원하는 오픈소스 클라우드 플랫폼
99.	GDI(Graphics Device Interface)
	윈도우에서 제공하는 그래픽 출력 서비스 라이브러리
	VGA 카드와의 호환을 위해 만들어짐
	화면 출력 외에 프린터 출력도 이를 따름
100.	다이렉트X(DirectX)
	GDI와 상관없이 출력 장치와 직접 상호 작용 가능한 MS의 라이브러리
	GDI보다 정교하게 VGA 활용 가능
	3D 그래픽 처리가 쉬워짐(게임 등에 사용)
	윈도우 비스타 이후 버전은 모두 다이렉트X로 통합
101.	NAS(Network Attached Storage)
	컴퓨터 네트워크에 연결된 파일 수준의 컴퓨터 기억 장치
	서로 다른 네트워크 클라이언트에 데이터 접근 권한 제공
102.	POSIX(Portable Operating System Interface for Computer Environment)
	UNIX 계열 운영체제간에 이식성을 높이기 위한 표준 API 규격
103.	AMP(Apache + MySQL/MariaDB + PHP)
	웹 서버 운영에 쓰이는 소프트웨어들을 뜻하는 용어
	Apache: 웹서버 
	MySQL/MariaDB: 데이터베이스
	PHP: 프로그래밍 언어
104.	핀테크(FinTech)
	IT기술을 기반으로 금융서비스를 제공하는 것
	금융(Financial)과 기술(Technique)의 합성어
	모바일을 통한 결제, 송금, 자산관리, 클라우드 펀딩 등을 의미
105.	리팩토링(Refactoring)
	결과의 변경 없이 코드 구조를 재조정하는 것
	가독성을 높임
	유지보수를 쉽게 함
	버그를 고치거나 새로운 기능을 추가하는 것은 아님
